<html>
<head>
<title>
CSocket - Socket Library
</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="#ffffff"> 
<table width="100%">
  <tr>
    <td width="40%" align="left" valign="center">
      <a href="http://carrierlabs.com/projects/sockets">
      CSocket project page
      </a>
    </td>
    <td>
      <a href="FAQ">FAQ</a>
    </td>
    <td width="40%" align="right" valign="center">
      <a href="http://csocket.carrierlabs.com">CSocket home page</a>
    </td>
  </tr>
</table>

<hr>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.html"><span>Modules</span></a></li>
    <li id="current"><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="files.html"><span>Files</span></a></li>
    <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.html"><span>Data&nbsp;Fields</span></a></li>
  </ul></div>
<h1>CSocket Class Reference</h1><!-- doxytag: class="CSocket" -->This class is designed to abstract socket communication development in a platform independent manner.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Socket_8h-source.html">Socket.h</a>&gt;</code>
<p>
Collaboration diagram for CSocket:<p><center><img src="classCSocket__coll__graph.png" border="0" usemap="#CSocket__coll__map" alt="Collaboration graph"></center>
<map name="CSocket__coll__map">
<area href="classCStatTimer.html" shape="rect" coords="7,7,95,34" alt="">
</map>
<center><font size="2">[<a href="graph_legend.html">legend</a>]</font></center><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#da74b4ecea0e5b5a8daa8179662aa175">CShutdownMode</a> { <a class="el" href="classCSocket.html#da74b4ecea0e5b5a8daa8179662aa1754d559525f6cb72e8c7ed1e94dd76214d">Receives</a> =  SHUT_RD, 
<a class="el" href="classCSocket.html#da74b4ecea0e5b5a8daa8179662aa17553e0de8427a68cc00c2c0b6e6210cc2d">Sends</a> =  SHUT_WR, 
<a class="el" href="classCSocket.html#da74b4ecea0e5b5a8daa8179662aa1750b7280eb0acae09c98c633aae48c4f43">Both</a> =  SHUT_RDWR
 }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Defines the three possible states for shuting down a socket.  <a href="classCSocket.html#da74b4ecea0e5b5a8daa8179662aa175">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#ddf02a1474910d03be8f80fd8f1ff874">CSocketType</a> { <a class="el" href="classCSocket.html#ddf02a1474910d03be8f80fd8f1ff8744924662aadc0a304652ea3304cbe1ea9">SocketTypeInvalid</a>, 
<a class="el" href="classCSocket.html#ddf02a1474910d03be8f80fd8f1ff8748cc9b2ba05a8071f32d2fee7b0d99d1f">SocketTypeTcp</a>, 
<a class="el" href="classCSocket.html#ddf02a1474910d03be8f80fd8f1ff8743073d66e717a4ff2ede694dbfe9ca2dc">SocketTypeUdp</a>, 
<a class="el" href="classCSocket.html#ddf02a1474910d03be8f80fd8f1ff8743022fb88606be79078a15bf2fe99d3f9">SocketTypeRaw</a>
 }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Defines the socket types defined by CSimpleSocket class.  <a href="classCSocket.html#ddf02a1474910d03be8f80fd8f1ff874">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d">CSocketError</a> { <br>
&nbsp;&nbsp;<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d3e171d8c0be6663c337d5fe5a3430a5d">SocketError</a> =  -1, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0dc353110524430af080037fcbd27cf96b">SocketSuccess</a> =  0, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d7a87756dc8c337ed770f599e41b76216">SocketInvalidSocket</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d9a8bb5235b0fca4b38b8bc246d5e8ccc">SocketInvalidAddress</a>, 
<br>
&nbsp;&nbsp;<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d0416eb7833fb41d47f644805f703d521">SocketInvalidPort</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d3c415c9f4fb7b6818fb097bcf572415d">SocketConnectionRefused</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d65d0f2aafdb11e8a772e7f731204d103">SocketConnectionTimeout</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d8d55fecc1a08e26196f020f8e97c1b74">SocketEwouldblock</a>, 
<br>
&nbsp;&nbsp;<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0df060a2d63706d5d181a2517b5d69097b">SocketNotconnected</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d16046c7cd9ae879bd96975594d2b0d25">SocketEinprogress</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d6be4581b3397ad97c1be8cc615b504c2">SocketInterrupted</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0dd0e9ce3bb8d26f3a82948fc36ea0f813">SocketConnectionAborted</a>, 
<br>
&nbsp;&nbsp;<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0de911f822b35ef85c676125146522a1cb">SocketProtocolError</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d3313f2e3dbfccf67386d4b116643c6cb">SocketFirewallError</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d3c6c78c9e70f0b5c0342a9acc674413e">SocketInvalidSocketBuffer</a>, 
<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d137931908162ff52ecdb7bfebf260e2f">SocketConnectionReset</a>, 
<br>
&nbsp;&nbsp;<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0de1f96f13ac6ca34d683aa6f63d1a3d76">SocketAddressInUse</a>
<br>
 }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Defines all error codes handled by the CSimpleSocket class.  <a href="classCSocket.html#89a933644b01678968309383f6d60b0d">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#0bcf20aaec7f64ccc92d6585c7ccb406">Initialize</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialize instance of <a class="el" href="classCSocket.html">CSocket</a>.  <a href="#0bcf20aaec7f64ccc92d6585c7ccb406"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#3a5747a2c7619a5802829c51b7027409">Select</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#fab0a57e179004d08ae3fdaa79d47922">IsSocketValid</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Does the current instance of the socket object contain a valid socket descriptor.  <a href="#fab0a57e179004d08ae3fdaa79d47922"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#b1d7e0ec5b7bb9091aa51ed514fd2b8d">TranslateSocketError</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Map the operating system error to an error defined by <a class="el" href="classCSocket.html">CSocket</a>.  <a href="#b1d7e0ec5b7bb9091aa51ed514fd2b8d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#1b5ece0c22ec2c2e72bdb1f7bf87b373">Receive</a> (INT32 nBytesToReceive=1)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Attempts to receive a block of data on an established connection.  <a href="#1b5ece0c22ec2c2e72bdb1f7bf87b373"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#5160a3b703be7ad6dca33aa0f3b6ff47">Send</a> (const UINT8 *pBuf, size_t bytesToSend)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Attempts to send a block of data on an established connection.  <a href="#5160a3b703be7ad6dca33aa0f3b6ff47"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#be91273af73cd9c3d8e98a6ea078138a">IsNonblocking</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns blocking/non-blocking state of socket.  <a href="#be91273af73cd9c3d8e98a6ea078138a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#13d82dda2581326b62de6419b9046191">SetBlocking</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the socket to blocking.  <a href="#13d82dda2581326b62de6419b9046191"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#9273b818c1baca4973fed8407d5161b9">SetNonblocking</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the socket as non-blocking.  <a href="#9273b818c1baca4973fed8407d5161b9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">UINT8 *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#6316907b0874f6b053027d5a0d34fddb">GetData</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get a pointer to internal receive buffer.  <a href="#6316907b0874f6b053027d5a0d34fddb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#181874a6b6568bfc884fa1a6c8051f42">GetBytesReceived</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the number of bytes received on the last call to <a class="el" href="classCSocket.html#1b5ece0c22ec2c2e72bdb1f7bf87b373">CSocket::Receive()</a>.  <a href="#181874a6b6568bfc884fa1a6c8051f42"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#4744886146a769a7614ff3587d3573f8">GetBytesSent</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the number of bytes sent on the last call to <a class="el" href="classCSocket.html#5160a3b703be7ad6dca33aa0f3b6ff47">CSocket::Send()</a>.  <a href="#4744886146a769a7614ff3587d3573f8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#6a924ecfe7d897b8a7878c6bfcaf3b75">GetReceiveTimeout</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">GetReceiveTimeout returns the.  <a href="#6a924ecfe7d897b8a7878c6bfcaf3b75"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#5511f7ef4addf65b87a60f275efaa582">SetReceiveTimeout</a> (INT32 nRecvTimeout)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#15ed5ff48a376abfc92184786ed92072">GetConnectTimeoutSec</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#c2901d61eee80667c744549d50c0e83f">GetConnectTimeoutUSec</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#6b45f310c41ac443ea57b4fe6474bcb3">SetConnectTimeoutSec</a> (INT32 nConnectTimeoutSec)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#674401477069ddf616f1d9f213b963ee">SetConnectTimeoutUSec</a> (INT32 nConnectTimeoutUSec)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">INT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#45b5735d0f3df8abec12376debc3f604">GetSendTimeout</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">BOOL&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#36bec2eab5875eaea8b290276c232b05">SetSendTimeout</a> (INT32 nSendTimeout)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d">CSocketError</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#503594e97661f32e4ae734021001eb80">GetSocketError</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">hostent *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#c4ca2eb24605182749530555ed3497cc">GetHostent</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">UINT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#4c9d36054eee831cf2e5841e9d9e019e">GetTotalTimeMs</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the total time the of the operation in microseconds.  <a href="#4c9d36054eee831cf2e5841e9d9e019e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">UINT32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#364cb5317cbc5f38645a5225ed6c0ea6">GetTotalTimeUsec</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the total time the of the operation in microseconds.  <a href="#364cb5317cbc5f38645a5225ed6c0ea6"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#1bee4ce20f5e54e301411c9178982939">SetSocketError</a> (<a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d">CSocket::CSocketError</a> error)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCSocket.html#a52cf2be2134c191f4cf9897bb3f53cf">SetSocketHandle</a> (SOCKET socket)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This class is designed to abstract socket communication development in a platform independent manner. 
<p>
A list of events:<ul>
<li>Socket types<ol type=a>
<li>Active Socket Class</li><li>Passive Socket Class </li></ol>
</li></ul>

<p>
<hr><h2>Member Enumeration Documentation</h2>
<a class="anchor" name="da74b4ecea0e5b5a8daa8179662aa175"></a><!-- doxytag: member="CSocket::CShutdownMode" ref="da74b4ecea0e5b5a8daa8179662aa175" args="" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">enum <a class="el" href="classCSocket.html#da74b4ecea0e5b5a8daa8179662aa175">CSocket::CShutdownMode</a>          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Defines the three possible states for shuting down a socket. 
<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="da74b4ecea0e5b5a8daa8179662aa1754d559525f6cb72e8c7ed1e94dd76214d"></a><!-- doxytag: member="Receives" ref="da74b4ecea0e5b5a8daa8179662aa1754d559525f6cb72e8c7ed1e94dd76214d" args="" -->Receives</em>&nbsp;</td><td>
Shutdown active socket. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="da74b4ecea0e5b5a8daa8179662aa17553e0de8427a68cc00c2c0b6e6210cc2d"></a><!-- doxytag: member="Sends" ref="da74b4ecea0e5b5a8daa8179662aa17553e0de8427a68cc00c2c0b6e6210cc2d" args="" -->Sends</em>&nbsp;</td><td>
Shutdown passive socket. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="da74b4ecea0e5b5a8daa8179662aa1750b7280eb0acae09c98c633aae48c4f43"></a><!-- doxytag: member="Both" ref="da74b4ecea0e5b5a8daa8179662aa1750b7280eb0acae09c98c633aae48c4f43" args="" -->Both</em>&nbsp;</td><td>
Shutdown both active and passive sockets. </td></tr>
</table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="89a933644b01678968309383f6d60b0d"></a><!-- doxytag: member="CSocket::CSocketError" ref="89a933644b01678968309383f6d60b0d" args="" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">enum <a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d">CSocket::CSocketError</a>          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Defines all error codes handled by the CSimpleSocket class. 
<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d3e171d8c0be6663c337d5fe5a3430a5d"></a><!-- doxytag: member="SocketError" ref="89a933644b01678968309383f6d60b0d3e171d8c0be6663c337d5fe5a3430a5d" args="" -->SocketError</em>&nbsp;</td><td>
Generic socket error translates to error below. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0dc353110524430af080037fcbd27cf96b"></a><!-- doxytag: member="SocketSuccess" ref="89a933644b01678968309383f6d60b0dc353110524430af080037fcbd27cf96b" args="" -->SocketSuccess</em>&nbsp;</td><td>
No socket error. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d7a87756dc8c337ed770f599e41b76216"></a><!-- doxytag: member="SocketInvalidSocket" ref="89a933644b01678968309383f6d60b0d7a87756dc8c337ed770f599e41b76216" args="" -->SocketInvalidSocket</em>&nbsp;</td><td>
Invalid socket handle. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d9a8bb5235b0fca4b38b8bc246d5e8ccc"></a><!-- doxytag: member="SocketInvalidAddress" ref="89a933644b01678968309383f6d60b0d9a8bb5235b0fca4b38b8bc246d5e8ccc" args="" -->SocketInvalidAddress</em>&nbsp;</td><td>
Invalid destination address specified. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d0416eb7833fb41d47f644805f703d521"></a><!-- doxytag: member="SocketInvalidPort" ref="89a933644b01678968309383f6d60b0d0416eb7833fb41d47f644805f703d521" args="" -->SocketInvalidPort</em>&nbsp;</td><td>
Invalid destination port specified. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d3c415c9f4fb7b6818fb097bcf572415d"></a><!-- doxytag: member="SocketConnectionRefused" ref="89a933644b01678968309383f6d60b0d3c415c9f4fb7b6818fb097bcf572415d" args="" -->SocketConnectionRefused</em>&nbsp;</td><td>
No server is listening at remote address. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d65d0f2aafdb11e8a772e7f731204d103"></a><!-- doxytag: member="SocketConnectionTimeout" ref="89a933644b01678968309383f6d60b0d65d0f2aafdb11e8a772e7f731204d103" args="" -->SocketConnectionTimeout</em>&nbsp;</td><td>
Timed out while attempting connection. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d8d55fecc1a08e26196f020f8e97c1b74"></a><!-- doxytag: member="SocketEwouldblock" ref="89a933644b01678968309383f6d60b0d8d55fecc1a08e26196f020f8e97c1b74" args="" -->SocketEwouldblock</em>&nbsp;</td><td>
Operation would block if socket were blocking. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0df060a2d63706d5d181a2517b5d69097b"></a><!-- doxytag: member="SocketNotconnected" ref="89a933644b01678968309383f6d60b0df060a2d63706d5d181a2517b5d69097b" args="" -->SocketNotconnected</em>&nbsp;</td><td>
Currently not connected. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d16046c7cd9ae879bd96975594d2b0d25"></a><!-- doxytag: member="SocketEinprogress" ref="89a933644b01678968309383f6d60b0d16046c7cd9ae879bd96975594d2b0d25" args="" -->SocketEinprogress</em>&nbsp;</td><td>
Socket is non-blocking and the connection cannot be completed immediately. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d6be4581b3397ad97c1be8cc615b504c2"></a><!-- doxytag: member="SocketInterrupted" ref="89a933644b01678968309383f6d60b0d6be4581b3397ad97c1be8cc615b504c2" args="" -->SocketInterrupted</em>&nbsp;</td><td>
Call was interrupted by a signal that was caught before a valid connection arrived. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0dd0e9ce3bb8d26f3a82948fc36ea0f813"></a><!-- doxytag: member="SocketConnectionAborted" ref="89a933644b01678968309383f6d60b0dd0e9ce3bb8d26f3a82948fc36ea0f813" args="" -->SocketConnectionAborted</em>&nbsp;</td><td>
The connection has been aborted. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0de911f822b35ef85c676125146522a1cb"></a><!-- doxytag: member="SocketProtocolError" ref="89a933644b01678968309383f6d60b0de911f822b35ef85c676125146522a1cb" args="" -->SocketProtocolError</em>&nbsp;</td><td>
Invalid protocol for operation. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d3313f2e3dbfccf67386d4b116643c6cb"></a><!-- doxytag: member="SocketFirewallError" ref="89a933644b01678968309383f6d60b0d3313f2e3dbfccf67386d4b116643c6cb" args="" -->SocketFirewallError</em>&nbsp;</td><td>
Firewall rules forbid connection. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d3c6c78c9e70f0b5c0342a9acc674413e"></a><!-- doxytag: member="SocketInvalidSocketBuffer" ref="89a933644b01678968309383f6d60b0d3c6c78c9e70f0b5c0342a9acc674413e" args="" -->SocketInvalidSocketBuffer</em>&nbsp;</td><td>
The receive buffer point outside the process's address space. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0d137931908162ff52ecdb7bfebf260e2f"></a><!-- doxytag: member="SocketConnectionReset" ref="89a933644b01678968309383f6d60b0d137931908162ff52ecdb7bfebf260e2f" args="" -->SocketConnectionReset</em>&nbsp;</td><td>
Connection was forcibly closed by the remote host. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="89a933644b01678968309383f6d60b0de1f96f13ac6ca34d683aa6f63d1a3d76"></a><!-- doxytag: member="SocketAddressInUse" ref="89a933644b01678968309383f6d60b0de1f96f13ac6ca34d683aa6f63d1a3d76" args="" -->SocketAddressInUse</em>&nbsp;</td><td>
Address already in use. </td></tr>
</table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="ddf02a1474910d03be8f80fd8f1ff874"></a><!-- doxytag: member="CSocket::CSocketType" ref="ddf02a1474910d03be8f80fd8f1ff874" args="" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">enum <a class="el" href="classCSocket.html#ddf02a1474910d03be8f80fd8f1ff874">CSocket::CSocketType</a>          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Defines the socket types defined by CSimpleSocket class. 
<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="ddf02a1474910d03be8f80fd8f1ff8744924662aadc0a304652ea3304cbe1ea9"></a><!-- doxytag: member="SocketTypeInvalid" ref="ddf02a1474910d03be8f80fd8f1ff8744924662aadc0a304652ea3304cbe1ea9" args="" -->SocketTypeInvalid</em>&nbsp;</td><td>
Invalid socket type. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="ddf02a1474910d03be8f80fd8f1ff8748cc9b2ba05a8071f32d2fee7b0d99d1f"></a><!-- doxytag: member="SocketTypeTcp" ref="ddf02a1474910d03be8f80fd8f1ff8748cc9b2ba05a8071f32d2fee7b0d99d1f" args="" -->SocketTypeTcp</em>&nbsp;</td><td>
Defines socket as TCP socket. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="ddf02a1474910d03be8f80fd8f1ff8743073d66e717a4ff2ede694dbfe9ca2dc"></a><!-- doxytag: member="SocketTypeUdp" ref="ddf02a1474910d03be8f80fd8f1ff8743073d66e717a4ff2ede694dbfe9ca2dc" args="" -->SocketTypeUdp</em>&nbsp;</td><td>
Defines socket as UDP socket. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="ddf02a1474910d03be8f80fd8f1ff8743022fb88606be79078a15bf2fe99d3f9"></a><!-- doxytag: member="SocketTypeRaw" ref="ddf02a1474910d03be8f80fd8f1ff8743022fb88606be79078a15bf2fe99d3f9" args="" -->SocketTypeRaw</em>&nbsp;</td><td>
Provides raw network protocol access. </td></tr>
</table>
</dl>
    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="181874a6b6568bfc884fa1a6c8051f42"></a><!-- doxytag: member="CSocket::GetBytesReceived" ref="181874a6b6568bfc884fa1a6c8051f42" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::GetBytesReceived           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the number of bytes received on the last call to <a class="el" href="classCSocket.html#1b5ece0c22ec2c2e72bdb1f7bf87b373">CSocket::Receive()</a>. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>number of bytes received. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="4744886146a769a7614ff3587d3573f8"></a><!-- doxytag: member="CSocket::GetBytesSent" ref="4744886146a769a7614ff3587d3573f8" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::GetBytesSent           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the number of bytes sent on the last call to <a class="el" href="classCSocket.html#5160a3b703be7ad6dca33aa0f3b6ff47">CSocket::Send()</a>. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>number of bytes sent. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="15ed5ff48a376abfc92184786ed92072"></a><!-- doxytag: member="CSocket::GetConnectTimeoutSec" ref="15ed5ff48a376abfc92184786ed92072" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::GetConnectTimeoutSec           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="c2901d61eee80667c744549d50c0e83f"></a><!-- doxytag: member="CSocket::GetConnectTimeoutUSec" ref="c2901d61eee80667c744549d50c0e83f" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::GetConnectTimeoutUSec           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="6316907b0874f6b053027d5a0d34fddb"></a><!-- doxytag: member="CSocket::GetData" ref="6316907b0874f6b053027d5a0d34fddb" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">UINT8* CSocket::GetData           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get a pointer to internal receive buffer. 
<p>
The user MUST not free this pointer when finished. This memory is managed internally by the <a class="el" href="classCSocket.html">CSocket</a> class. <dl compact><dt><b>Returns:</b></dt><dd>pointer to data if valid, else returns NULL. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="c4ca2eb24605182749530555ed3497cc"></a><!-- doxytag: member="CSocket::GetHostent" ref="c4ca2eb24605182749530555ed3497cc" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">struct hostent* CSocket::GetHostent           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd></dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="6a924ecfe7d897b8a7878c6bfcaf3b75"></a><!-- doxytag: member="CSocket::GetReceiveTimeout" ref="6a924ecfe7d897b8a7878c6bfcaf3b75" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::GetReceiveTimeout           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
GetReceiveTimeout returns the. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd></dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="45b5735d0f3df8abec12376debc3f604"></a><!-- doxytag: member="CSocket::GetSendTimeout" ref="45b5735d0f3df8abec12376debc3f604" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::GetSendTimeout           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="503594e97661f32e4ae734021001eb80"></a><!-- doxytag: member="CSocket::GetSocketError" ref="503594e97661f32e4ae734021001eb80" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d">CSocketError</a> CSocket::GetSocketError           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="4c9d36054eee831cf2e5841e9d9e019e"></a><!-- doxytag: member="CSocket::GetTotalTimeMs" ref="4c9d36054eee831cf2e5841e9d9e019e" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">UINT32 CSocket::GetTotalTimeMs           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the total time the of the operation in microseconds. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>number of milliseconds. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="364cb5317cbc5f38645a5225ed6c0ea6"></a><!-- doxytag: member="CSocket::GetTotalTimeUsec" ref="364cb5317cbc5f38645a5225ed6c0ea6" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">UINT32 CSocket::GetTotalTimeUsec           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the total time the of the operation in microseconds. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>number of microseconds. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="0bcf20aaec7f64ccc92d6585c7ccb406"></a><!-- doxytag: member="CSocket::Initialize" ref="0bcf20aaec7f64ccc92d6585c7ccb406" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">BOOL CSocket::Initialize           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initialize instance of <a class="el" href="classCSocket.html">CSocket</a>. 
<p>
This method MUST be called before an object can be used. <dl compact><dt><b>Returns:</b></dt><dd>true if properly initialized.  <a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0de911f822b35ef85c676125146522a1cb">CSocket::SocketProtocolError</a>, <a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d7a87756dc8c337ed770f599e41b76216">CSocket::SocketInvalidSocket</a>, </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="be91273af73cd9c3d8e98a6ea078138a"></a><!-- doxytag: member="CSocket::IsNonblocking" ref="be91273af73cd9c3d8e98a6ea078138a" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">BOOL CSocket::IsNonblocking           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns blocking/non-blocking state of socket. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>true if the socket is blocking, else return false. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="fab0a57e179004d08ae3fdaa79d47922"></a><!-- doxytag: member="CSocket::IsSocketValid" ref="fab0a57e179004d08ae3fdaa79d47922" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">virtual BOOL CSocket::IsSocketValid           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Does the current instance of the socket object contain a valid socket descriptor. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>true </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="1b5ece0c22ec2c2e72bdb1f7bf87b373"></a><!-- doxytag: member="CSocket::Receive" ref="1b5ece0c22ec2c2e72bdb1f7bf87b373" args="(INT32 nBytesToReceive=1)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::Receive           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">INT32&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>nBytesToReceive</em> = <code>1</code>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Attempts to receive a block of data on an established connection. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>nBytesToReceive</em>&nbsp;</td><td>number of bytes to receive </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>number of bytes actually received, return of zero means the connection has been shutdown on the other side, and a return of -1 means that an error has occurred. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="3a5747a2c7619a5802829c51b7027409"></a><!-- doxytag: member="CSocket::Select" ref="3a5747a2c7619a5802829c51b7027409" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">BOOL CSocket::Select           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fdSocket</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd></dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="5160a3b703be7ad6dca33aa0f3b6ff47"></a><!-- doxytag: member="CSocket::Send" ref="5160a3b703be7ad6dca33aa0f3b6ff47" args="(const UINT8 *pBuf, size_t bytesToSend)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">INT32 CSocket::Send           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const UINT8 *&nbsp;</td>
          <td class="mdname" nowrap> <em>pBuf</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>size_t&nbsp;</td>
          <td class="mdname" nowrap> <em>bytesToSend</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Attempts to send a block of data on an established connection. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pBuf</em>&nbsp;</td><td>block of data to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bytesToSend</em>&nbsp;</td><td>size of data block to be sent. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>number of bytes actually sent, return of zero means the connection has been shutdown on the other side, and a return of -1 means that an error has occurred. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="13d82dda2581326b62de6419b9046191"></a><!-- doxytag: member="CSocket::SetBlocking" ref="13d82dda2581326b62de6419b9046191" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">BOOL CSocket::SetBlocking           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the socket to blocking. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>true if successful set to blocking, else return false; </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="6b45f310c41ac443ea57b4fe6474bcb3"></a><!-- doxytag: member="CSocket::SetConnectTimeoutSec" ref="6b45f310c41ac443ea57b4fe6474bcb3" args="(INT32 nConnectTimeoutSec)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void CSocket::SetConnectTimeoutSec           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">INT32&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>nConnectTimeoutSec</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="674401477069ddf616f1d9f213b963ee"></a><!-- doxytag: member="CSocket::SetConnectTimeoutUSec" ref="674401477069ddf616f1d9f213b963ee" args="(INT32 nConnectTimeoutUSec)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void CSocket::SetConnectTimeoutUSec           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">INT32&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>nConnectTimeoutUSec</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="9273b818c1baca4973fed8407d5161b9"></a><!-- doxytag: member="CSocket::SetNonblocking" ref="9273b818c1baca4973fed8407d5161b9" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">BOOL CSocket::SetNonblocking           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the socket as non-blocking. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>true if successful set to non-blocking, else return false; </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="5511f7ef4addf65b87a60f275efaa582"></a><!-- doxytag: member="CSocket::SetReceiveTimeout" ref="5511f7ef4addf65b87a60f275efaa582" args="(INT32 nRecvTimeout)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">BOOL CSocket::SetReceiveTimeout           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">INT32&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>nRecvTimeout</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="36bec2eab5875eaea8b290276c232b05"></a><!-- doxytag: member="CSocket::SetSendTimeout" ref="36bec2eab5875eaea8b290276c232b05" args="(INT32 nSendTimeout)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">BOOL CSocket::SetSendTimeout           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">INT32&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>nSendTimeout</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="1bee4ce20f5e54e301411c9178982939"></a><!-- doxytag: member="CSocket::SetSocketError" ref="1bee4ce20f5e54e301411c9178982939" args="(CSocket::CSocketError error)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void CSocket::SetSocketError           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classCSocket.html#89a933644b01678968309383f6d60b0d">CSocket::CSocketError</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>error</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, protected]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>@return</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a52cf2be2134c191f4cf9897bb3f53cf"></a><!-- doxytag: member="CSocket::SetSocketHandle" ref="a52cf2be2134c191f4cf9897bb3f53cf" args="(SOCKET socket)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void CSocket::SetSocketHandle           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">SOCKET&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>socket</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, protected]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em></em>&nbsp;</td><td></td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="b1d7e0ec5b7bb9091aa51ed514fd2b8d"></a><!-- doxytag: member="CSocket::TranslateSocketError" ref="b1d7e0ec5b7bb9091aa51ed514fd2b8d" args="(void)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void CSocket::TranslateSocketError           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Map the operating system error to an error defined by <a class="el" href="classCSocket.html">CSocket</a>. 
<p>
Provides a standard interface for cross platform development.     </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Socket_8h-source.html">Socket.h</a><li>Socket.cpp</ul>
<hr>
<table width="100%">
  <tr>
    <td width="10%" align="left" valign="center">
      <a href="http://carrierlabs.com"> 
      <img
      src="http://sourceforge.net/sflogo.php?group_id=11795"
      width="88" height="31" border="0" alt="SourceForge Logo"></a>
    </td>
    <td width="20%" align="left" valign="center">
      hosts this site.
    </td>
    <td>
    </td>
    <td align="right" valign="center">
      Send comments to:<br>
      <a href="mailto:mark@carrierlabs.com">CarrierLabs Developers</a>
    </td>
  </tr>
</table>

</body> 
</html>
